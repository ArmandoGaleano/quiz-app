server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Substitua pelo domínio do seu servidor
    server_name YOUR_DOMAIN_NAME;

    # Substitua pelos caminhos reais para os certificados SSL
    ssl_certificate YOUR_SSL_CERTIFICATE_PATH;
    ssl_certificate_key YOUR_SSL_CERTIFICATE_KEY_PATH;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Substitua pelo caminho real do arquivo Diffie-Hellman
    ssl_dhparam YOUR_DHPARAM_PATH;

    # Security Headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    client_max_body_size 50m;

    # Application Proxy
    location / {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://node_app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    server_name _;

    return 444; # Fecha conexões indesejadas.
}

server {
    listen 80 default_server; 
    listen [::]:80 default_server;
    server_name _;

    return 444; # Fecha conexões indesejadas.
}

server {
    listen 80;
    listen [::]:80;

    # Substitua pelo domínio do seu servidor
    server_name YOUR_DOMAIN_NAME;

    location /.well-known/acme-challenge/ {
        # Substitua pelo caminho real do Certbot
        root YOUR_CERTBOT_PATH;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}